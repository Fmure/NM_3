#1.2 Реализовать метод прогонки в виде программы,
#задавая в качестве входных данных ненулевые элементы матрицы системы 
#и вектор правых частей. Используя разработанное программное обеспечение, 
#решить СЛАУ с трехдиагональной матрицей
if __name__ == '__main__':
  n = int(input('Enter the size of matrix: '))
  nn = n -1 
  print("Enter matrix's diagonals a b c and vector d /n")

  a = list(map(int, input('a: ').split()))
  b = list(map(int, input('b: ').split()))
  c = list(map(int, input('c: ').split()))
  d = list(map(int, input('d: ').split()))
  P = [0 for _ in range(n)]
  Q = [0 for _ in range(n)]
  x = [0 for _ in range(n)]

  P[0] = -c[0] / b[0]
  Q[0] = d[0] / b[0]

  for i in range(1,n,1): # start stop step
    P[i] = -c[i] / (b[i] + a[i] * P[i-1])
    Q[i] = (d[i] - a[i] * Q[i-1]) / (b[i] + a[i] * P[i-1])

  P[nn] = 0 # c[n] = 0
  Q[nn] = (d[nn] - a[nn] * Q[nn-1]) / (b[nn] + a[nn] * P[nn-1])
  x[nn] = Q[nn]

  for i in range(nn-1,-1,-1):
    x[i] = P[i] * x[i+1] + Q[i]
  
  print('Vector x:', x)

  
"""
a: 0 -8 -5 1 -4
b: 14 14 -17 5 -10
c: 9 6 8 -2 0
d: 125 -56 144 36 70

a: 0 -3 -2 -4 4
b: 12 -18 -16 18 -9
c: -5 -8 -9 -7 0
d: 148 45 -155 11 3
"""